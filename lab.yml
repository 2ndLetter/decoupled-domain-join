AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template Sample template EIP_With_Association: This
  template shows how to associate an Elastic IP address with an Amazon EC2
  instance - you can use this same technique to associate an EC2 instance with
  an Elastic IP Address that is not created inside the template by replacing the
  EIP reference in the AWS::EC2::EIPAssoication resource type with the IP
  address of the external EIP. **WARNING** This template creates an Amazon EC2
  instance and an Elastic IP Address. You will be billed for the AWS resources
  used if you create a stack from this template.
Parameters:
  ImageId:
    Description: AMI ID
    Type: String
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t2.micro
      - t2.medium
      - t3.micro
      - t3.medium
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: "lab"
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -ex
            dnf install -y aws-cfn-bootstrap
            
            dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            systemctl enable amazon-ssm-agent
            systemctl start amazon-ssm-agent
            systemctl status amazon-ssm-agent

            # Download artifacts
            #aws s3 sync s3:// /tmp
            #chmod +x /tmp/*.sh
            #. /tmp/TBD.sh

            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
              Type: AWS::EC2::Instance
              Properties:
                KeyName: 
                DisableApiTermination: 
                ImageId: 
                InstanceType: 
                Monitoring: true|false
                SecurityGroupIds:
                  - sg-id
                UserData: !Base64 |
                  #!/bin/bash -ex
                  # put your script here
                Tags:
                  - Key: key
                    Value: value

            #'Fn::Join':
            #  - ''
            #  - - IPAddress=
            #    - !Ref IPAddress
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      Tags:
        - Key: "Name"
          Value: "RHEL_Server"
    #CreationPolicy:
    #  ResourceSignal:
    #    Count: 1
    #    Timeout: PT10M
      
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  IPAddress:
    Type: 'AWS::EC2::EIP'
  IPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref EC2Instance
      EIP: !Ref IPAddress
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref IPAddress
